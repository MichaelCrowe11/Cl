// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  
  // Subscription info
  stripeCustomerId String?
  subscriptionPlan String @default("free") // "free", "pro", "enterprise"
  subscriptionStatus String @default("active")
  subscriptionPeriodEnd DateTime?
  
  accounts      Account[]
  sessions      Session[]
  usageRecords  UsageRecord[]
  
  @@map("users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model UsageRecord {
  id        String   @id @default(cuid())
  userId    String
  date      DateTime @default(now())
  
  // Daily usage counters
  tokenCount     Int @default(0)
  fileUploadCount Int @default(0)
  apiCallCount   Int @default(0)
  storageUsedMB  Int @default(0)
  
  // Metadata
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@unique([userId, date])
  @@map("usage_records")
}

model UsageEvent {
  id        String   @id @default(cuid())
  userId    String
  eventType String   // "token_usage", "file_upload", "api_call"
  amount    Int      // tokens used, files uploaded, etc.
  metadata  Json?    // additional context
  createdAt DateTime @default(now())
  
  @@map("usage_events")
}
